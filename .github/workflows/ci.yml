name: ci
on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.c_compiler }}-${{ matrix.build_type }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # change when library is more stable
      matrix:
        #        os: [ubuntu-latest, windows-latest]
        os: [ubuntu-24.04]
        build_type: [Debug, Release]
        #        c_compiler: [gcc, clang, cl]
        c_compiler: [gcc-12, gcc-13, gcc-14, clang-14]
        include:
          #          - os: windows-latest
          #            c_compiler: cl
          #            cpp_compiler: cl
          - os: ubuntu-24.04
            c_compiler: gcc-12
            cpp_compiler: g++-12
          - os: ubuntu-24.04
            c_compiler: gcc-13
            cpp_compiler: g++-13
          - os: ubuntu-24.04
            c_compiler: gcc-14
            cpp_compiler: g++-14
          - os: ubuntu-24.04
            c_compiler: clang-14
            cpp_compiler: clang++-14
    #        exclude:
    #          - os: windows-latest
    #            c_compiler: gcc
    #          - os: windows-latest
    #            c_compiler: clang
    #          - os: ubuntu-latest
    #            c_compiler: cl
    steps:
      - name: checkout code
        uses: actions/checkout@v5

      - name: install gcc versions and clang versions
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-12 gcc-13 gcc-14 clang-14

      - name: set reusable variables
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> $GITHUB_OUTPUT

      #      - name: configure cmake (MSVC)
      #        if: matrix.os == 'windows-latest' && matrix.c_compiler == 'cl'
      #        run: cmake -B ${{ steps.strings.outputs.build-output-dir }} \
      #          -G "Visual Studio 17 2022" -A x64 \
      #          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
      #          -DBUILD_TESTING=ON \
      #          -S ${{ github.workspace }}

      - name: configure cmake (Linux)
        #        if: matrix.os == 'ubuntu-latest'
        run: cmake -B ${{ steps.strings.outputs.build-output-dir }} \
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DBUILD_TESTING=ON \
          -S ${{ github.workspace }}

      - name: build genogrove data_type
        run: |
          cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

      - name: run tests
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ctest -C ${{ matrix.build_type }} --output-on-failure